
//match expression
object Main {
    def main(args: Array[String]): Unit = {
      val age = 1

      age match {
        case 20 => println(age)
        case 18 => println(age)
        case 30 => println(age)
        case 40 => println(age)
        case 50 => println(age)
        case _ => println("Age not matched") // Optional default case if age doesn't match any of the specified cases.
      }
    }
  }
  
  
  //2
  object Main {
  def main(args: Array[String]): Unit = {
    val age = 18

    age match {
      case 20 => println(age)
      case 18 => println(age)
      case 30 => println(age)
      case 40 => println(age)
      case 50 => println(age)
      case _ => println("Age not matched") // Optional default case if age doesn't match any of the specified cases.

    }
    val result= age match{
          case 20 => age
          case 18 => age
          case 30 => age

          case 40 => age
          case 50 => age
          case _ => println("Age not matched")

        }
        println("result="+result)
    }
  }
  
 // 3
object Main {
  def main(args: Array[String]): Unit = {
   
    var i=7
    i match {
      case 1|3|5|7|9=>println("odd")
      case 2|4|6|8=>println("even")

    }
    }
  }
  
 

//functions in scala
object Main {
  object Math{
    def add(x: Int=9, y: Int=9): Int = {
      return x + y;
    }

  }
  def add(x: Int,y:Int): Int ={
    return x+y;
  }

  def sub(x: Int, y: Int): Int = {
     x - y;
  }

  def mul(x: Int, y: Int): Int = x*y;

def print(x:Int,y:Int)={
    println("x "+ x+y)
  }
  def div(x: Int, y: Int)=x/y
  def main(args: Array[String]): Unit = {
    print(100,100);
    println(Math.add());
    println(add(34,44));
    println(sub(34,44));
    println(mul(34,44));
    println(div(134,44));
    }
  }
  
//Higher order functions in scala
object Main {
  def math(x: Double, y: Double, f: (Double, Double) => Double): Double = f(x, y);


  def main(args: Array[String]): Unit = {
    var result = math(20, 20, (x, y) => x + y)
    print(result)
  }
}



//partially  applied functions in scala
import java.util.Date
object Main {
def log(date: Date,message:String)={
  println(date+" "+message)
}

  def main(args: Array[String]): Unit = {
    var sum = (X:Int,b:Int,c:Int)=>X+b+c
    var f= sum(10,30,_:Int)
    println(f(100))
    var date=new Date()
    val newLog=log(date,_:String);
    newLog("this message 1")
  }
}

//Currying   functions in scala

object Main {
def add(x: Int,y:Int)=x+y
  def add2(x: Int)=(y:Int)=>x+y
  def add3(x: Int)(y:Int)=x+y

  def main(args: Array[String]): Unit = {

    println(add(100, 20))

    println(add2(100)( 20))

    val sum=add2(40)
    println(sum(100))
    val sum2 = add3(40)_
    println(sum2(19))
  }
  }



  
